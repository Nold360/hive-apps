image:
  ## @param image.registry Image registry
  registry: quay.io

  ## @param image.repository Image repository
  repository: go-skynet/local-ai

  ## @param image.tag Image tag
  tag: v1.21.0-ffmpeg

  ## @param image.digest Image digest
  digest: ""

  ## @param image.pullPolicy Image pull policy
  pullPolicy: IfNotPresent

podSecurityContext:
  fsGroup: 2000

## @param securityContext Container security context
securityContext:
  capabilities:
    drop:
    - ALL
  #readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

ingress:
  ## @param ingress.enabled Enable ingress controller resource
  enabled: true

  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress
  ingressClassName: "ingress-internal"

  ## @param ingress.pathType Ingress path type
  pathType: ImplementationSpecific

  ## @param ingress.annotations Ingress annotations
  annotations:
    cert-manager.io/cluster-issuer: vault-issuer
    traefik.ingress.kubernetes.io/router.tls: 'true'

    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  ## @param ingress.hosts[0].host Hostname to your LocalAI installation
  ## @param ingress.hosts[0].paths Paths within the url structure
  hosts:
    - host: ai.dc
      paths:
        - /

  ## @param ingress.tls TLS configuration
  tls:
    - secretName: local-ai-tls
      hosts:
        - ai.dc

## @param resources CPU/Memory resource requests/limits
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## @param extraArgs Additional container arguments
extraArgs: {}
  # name: ""

## @param extraEnvVars Additional container environment variables
extraEnvVars: []
  # - name: MY-NAME
  #   value: "MY-VALUE"

## @param extraEnvVarsCM Name of existing ConfigMap containing additional container environment variables
extraEnvVarsCM:

## @param extraEnvVarsSecret Name of existing Secret containing additional container environment variables
extraEnvVarsSecret:

init:
  ## @param init.securityContext Init security context
  securityContext:
    capabilities:
      drop:
      - ALL
  # readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

  ## @param init.resources Init CPU/Memory resource requests/limits
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

persistence:
  ## @param persistence.enabled Enable persistence using PVC
  enabled: true
  accessMode: ReadWriteOnce
  size: 1Gi
  storageClass: ssd

config:
  ## @param config.galleries Model galleries
  galleries:
    - name: model-gallery
      url: github:go-skynet/model-gallery/index.yaml

  ## @param config.preloadModels Models to preload (configure liveness probe initial delay according to model download time)
  preloadModels:
    - id: model-gallery@text-embedding-ada-002
    - url: github:go-skynet/model-gallery/gpt4all-j.yaml
      name: gpt-3.5-turbo
    - id: model-gallery@stablediffusion
    - id: model-gallery@whisper-1
    - id: model-gallery@voice-en-us-kathleen-low

# FIXME:due to timeout during download
readinessProbe:
  enabled: false

livenessProbe:
  enabled: false
