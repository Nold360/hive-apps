crds:
  enabled: true

alertmanager:
  ingress:
    enabled: false

grafana:
  enabled: true
  namespaceOverride: "grafana"

  image:
    repository: grafana/grafana
    tag: 11.6.1

  persistence:
    enabled: true
    type: pvc
    storageClassName: local-path
    accessModes:
      - ReadWriteOnce
    size: 10Gi

  defaultDashboardsTimezone: utc

  ingress:
    enabled: true
    ingressClassName: ingress-internal

    annotations:
      cert-manager.io/cluster-issuer: vault-issuer

    hosts:
      - grafana.dc

    path: /

    tls:
     - secretName: grafana-general-tls
       hosts:
       - grafana.dc

  admin:
    existingSecret: "grafana"

defaultRules:
  create: false

kubeDns:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
kubeStateMetrics:
  enabled: true
nodeExporter:
  enabled: true

prometheusOperator:
  enabled: true

  kubeletService:
    enabled: true

  # For ArgoCD: https://github.com/prometheus-community/helm-charts/issues/4500#issuecomment-2693911587
  admissionWebhooks:
    enabled: true

    annotations:
      argocd.argoproj.io/hook: PreSync
      argocd.argoproj.io/hook-delete-policy: HookSucceeded

    patch:
      annotations:
        argocd.argoproj.io/hook: PreSync
        argocd.argoproj.io/hook-delete-policy: HookSucceeded

    mutatingWebhookConfiguration:
      annotations:
        argocd.argoproj.io/hook: PreSync

    validatingWebhookConfiguration:
      annotations:
        argocd.argoproj.io/hook: PreSync

prometheus:
  enabled: true

  strategy:
    type: Recreate

  ingress:
    enabled: false

  prometheusSpec:
    scrapeInterval: "60s"
    retention: 90d
    replicas: 1

    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}

    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ssd
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

    additionalScrapeConfigs:
      # This scrapes all services/pods with prometheus.io/scrape annotation:
      #- job_name: 'smartctl'
      #  scrape_interval: 60s
      #  static_configs:
      #   - targets: ['127.0.0.1:9902']

      - job_name: 'hive-ipmi'
        scrape_interval: 60s
        static_configs:
        - targets: ['192.168.1.111:9290']

      - job_name: 'kubernetes-services'
        scrape_interval: 120s
        kubernetes_sd_configs:
        - role: service
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_service_name

      - job_name: 'kubernetes-pods'
        scrape_interval: 120s
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
