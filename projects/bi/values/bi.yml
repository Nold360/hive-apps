controllers:
  # main agent
  main:
    containers:
      main:
        image:
          repository: reg.dc/bi
          tag: latest
          pullPolicy: Always
        env:
          BIBOT_CONFIG: /config/bibot.yml
          BIBOT_KAFKA__BROKER: kafka://bi-cluster-kafka-bootstrap:9092
          BIBOT_QDRANT__API_KEY:
            valueFrom:
              secretKeyRef:
                name: qdrant-apikey
                key: api-key
          BIBOT_VALKEY__HOST: valkey-primary.bi.svc.cluster.local
          BIBOT_VALKEY__PASSWORD:
            valueFrom:
              secretKeyRef:
                name: valkey
                key: valkey-password
          OPENAI_API_KEY: fake
        command: ["python"]
        args: ["/app/bi/agents/main/app.py", "worker", "-l", "info"]

  controller:
    containers:
      main:
        image:
          repository: reg.dc/bi
          tag: latest
          pullPolicy: Always
        env:
          BIBOT_CONFIG: /config/bibot.yml
          BIBOT_KAFKA__BROKER: kafka://bi-cluster-kafka-bootstrap:9092
          BIBOT_VALKEY__HOST: valkey-primary.bi.svc.cluster.local
          BIBOT_VALKEY__PASSWORD:
            valueFrom:
              secretKeyRef:
                name: valkey
                key: valkey-password
        command: ["python"]
        args: ["/app/bi/controller.py", "worker", "-l", "info"]

  memory:
    containers:
      main:
        image:
          repository: reg.dc/bi
          tag: latest
          pullPolicy: Always
        env:
          BIBOT_CONFIG: /config/bibot.yml
          BIBOT_KAFKA__BROKER: kafka://bi-cluster-kafka-bootstrap:9092
          BIBOT_QDRANT__API_KEY:
            valueFrom:
              secretKeyRef:
                name: qdrant-apikey
                key: api-key
          BIBOT_VALKEY__PASSWORD:
            valueFrom:
              secretKeyRef:
                name: valkey
                key: valkey-password
          BIBOT_VALKEY__HOST: valkey-primary.bi.svc.cluster.local
          OPENAI_API_KEY: fake
        command: ["python"]
        args: ["/app/bi/agents/memory/app.py", "worker", "-l", "info"]


  discord:
    containers:
      main:
        image:
          repository: reg.dc/bi
          tag: latest
          pullPolicy: Always
    
        command: ["python"]
        args: ["/app/bi/connectors/discord/app.py", "worker", "-l", "info"]

        env:
          BIBOT_KAFKA__BROKER: bi-cluster-kafka-bootstrap:9092
          BIBOT_VALKEY__HOST: valkey-primary.bi.svc.cluster.local
          OPENAI_API_KEY: fake
          BIBOT_DISCORD__TOKEN:
            valueFrom:
              secretKeyRef:
                name: bibot
                key: discord-token

          ## Prod:
          BIBOT_DISCORD__CHANNELS: "1216440541064200192"
          # Dev:
          # BIBOT_DISCORD_CHANNELS: "1217418069693960223"
        probes:
          liveness: 
            enabled: false
          readiness: 
            enabled: false
          startup: 
            enabled: false

persistence:
  secret:
    name: bibot
    enabled: true
    type: secret

  config:
    name: bibot-config
    enabled: true
    type: configMap

  data:
    size: 10Gi
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce

# service:
#   main:
#     controller: mongoui
#     ports:
#       http:
#         port: 4321
#     type: ClusterIP

# ingress:
#   main:
#     annotations:
#       cert-manager.io/cluster-issuer: vault-issuer
#     enabled: true
#     hosts:
#     - host: mongo.dc
#       paths:
#       - path: /
#         service:
#           # name: main
#           identifier: main
#           port: 4321
#     tls:
#     - hosts:
#       - mongo.dc
#       secretName: mongo-tls
