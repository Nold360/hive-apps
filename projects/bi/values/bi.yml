controllers:
  # main agent
  main:
    containers:
      main:
        image:
          repository: reg.dc/bi
          tag: latest
          pullPolicy: Always
        env:
          BIBOT_CONFIG: /config/bibot.yml
          BIBOT_KAFKA__BROKER: kafka://bi-cluster-kafka-bootstrap:9092
          BIBOT_MONGODB__URI: mongodb://bi-mongo-svc:27017/
          BIBOT_MONGODB__USER:
            valueFrom:
              secretKeyRef:
                name: bi-mongo-bi-bi
                key: username
          BIBOT_MONGODB__PASSWORD:
            valueFrom:
              secretKeyRef:
                name: bi-mongo-bi-bi
                key: password
          PHOENIX_COLLECTOR_ENDPOINT: http://phoenix.phoenix.svc.cluster.local:6006
          PHOENIX_PROJECT_NAME: bi
        command: ["python3"]
        args: ["/app/bi/agents/main/app.py", "worker", "-l", "info"]

  controller:
    containers:
      main:
        image:
          repository: reg.dc/bi
          tag: latest
          pullPolicy: Always
        env:
          BIBOT_CONFIG: /config/bibot.yml
          BIBOT_KAFKA__BROKER: kafka://bi-cluster-kafka-bootstrap:9092
          BIBOT_MONGODB__URI: mongodb://bi-mongo-svc:27017/
          BIBOT_MONGODB__USER:
            valueFrom:
              secretKeyRef:
                name: bi-mongo-bi-bi
                key: username
          BIBOT_MONGODB__PASSWORD:
            valueFrom:
              secretKeyRef:
                name: bi-mongo-bi-bi
                key: password
        command: ["python3"]
        args: ["/app/bi/controller.py", "worker", "-l", "info"]

  discord:
    containers:
      main:
        image:
          repository: reg.dc/bi
          tag: latest
          pullPolicy: Always
    
        command: ["python3"]
        args: ["/app/bi/connectors/discord/app.py", "worker", "-l", "info"]

        env:
          BIBOT_KAFKA__BROKER: bi-cluster-kafka-bootstrap:9092
          BIBOT_MONGODB__URI: mongodb://bi-mongo-svc:27017/
          BIBOT_MONGODB__USER:
            valueFrom:
              secretKeyRef:
                name: bi-mongo-bi-bi
                key: username
          BIBOT_MONGODB__PASSWORD:
            valueFrom:
              secretKeyRef:
                name: bi-mongo-bi-bi
                key: password
          OPENAI_API_KEY: fake
          BIBOT_DISCORD__TOKEN:
            valueFrom:
              secretKeyRef:
                name: bibot
                key: discord-token

          ## Prod:
          BIBOT_DISCORD__CHANNELS: "1216440541064200192"
          # Dev:
          # BIBOT_DISCORD_CHANNELS: "1217418069693960223"
        probes:
          liveness: 
            enabled: false
          readiness: 
            enabled: false
          startup: 
            enabled: false

  researcher:
    containers:
      main:
        image:
          repository: reg.dc/bi
          tag: latest
          pullPolicy: Always
        env:
          BIBOT_CONFIG: /config/bibot.yml
          BIBOT_OPENAI__TEMPERATURE: "0.0"
          BIBOT_KAFKA__BROKER: kafka://bi-cluster-kafka-bootstrap:9092
          BIBOT_MONGODB__URI: mongodb://bi-mongo-svc:27017/
          BIBOT_MONGODB__USER:
            valueFrom:
              secretKeyRef:
                name: bi-mongo-bi-bi
                key: username
          BIBOT_MONGODB__PASSWORD:
            valueFrom:
              secretKeyRef:
                name: bi-mongo-bi-bi
                key: password
          OPENWEATHERMAP_API_KEY:
            valueFrom:
              secretKeyRef:
                name: bibot
                key: OPENWEATHERMAP_API_KEY
          PHOENIX_COLLECTOR_ENDPOINT: http://phoenix.phoenix.svc.cluster.local:6006
          PHOENIX_PROJECT_NAME: bi
        command: ["python3"]
        args: ["/app/bi/agents/researcher/app.py", "worker", "-l", "info"]


persistence:
  secret:
    name: bibot
    enabled: true
    type: secret

  config:
    name: bibot-config
    enabled: true
    type: configMap

  data:
    size: 10Gi
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce

# service:
#   main:
#     controller: main
#     ports:
#       http:
#         port: 8000
#     type: ClusterIP
